name: "Run checks: all modules"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      IMAGE_TAG: ${{ github.sha }}
      ECR_REPOSITORY: newsfeed-crawler-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Build And Push newsfeed crawler service
        run: |
          echo "building newsfeed-crawler"
          cd engine/api/newsfeed-crawler-service
          docker build -t newsfeed-crawler-service:${{ env.IMAGE_TAG }}  .
          echo "tagging newsfeed-crawler"
          docker tag newsfeed-crawler-service:${{ env.IMAGE_TAG }} ${{ steps.login-ecr.outputs.registry }}/${{ newsfeed-crawler-service }}:${{ env.IMAGE_TAG }}
          echo "Pushing newsfeed-crawler"
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ newsfeed-crawler-service }}:${{ env.IMAGE_TAG }}
          
      - name: Docker Build And Push newsfeed-parser-service
        run: |
          echo "building newsfeed-parser-service"
          cd engine/api/newsfeed-parser-service
          docker build -t newsfeed-parser-service:${{ env.IMAGE_TAG }}  .
          echo "tagging newsfeed-parser-service"
          docker tag newsfeed-parser-service:${{ env.IMAGE_TAG }} ${{ steps.login-ecr.outputs.registry }}/${{ newsfeed-parser-service }}:${{ env.IMAGE_TAG }}
          echo "Pushing newsfeed-parser-service"
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ newsfeed-parser-service }}:${{ env.IMAGE_TAG }}
          
